<Controls:MetroWindow x:Class="Client.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:Client" 
        xmlns:iconPacks="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks.Modern" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      mc:Ignorable="d"
        Title="Spotifake" Height="700" Width="1100" Icon="Resources/LogoSpotifake.png" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen">
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="flyout"
                             Header="Management"
                             Position="Left"
                             IsOpen="False"
                             IsPinned="False"
                             AnimateOpacity="True"
                             AnimateOnPositionChange="False"
                             IsModal="False"
                             Theme="Dark"
                             ExternalCloseButton="Left"
                             CloseButtonVisibility="Hidden"
                             TitleVisibility="Hidden"
                             AreAnimationsEnabled="True"
                             Width="263">
                <Grid Width="263" Background="#FF181818" HorizontalAlignment="Left" Height="639" VerticalAlignment="Top" Margin="0,30,0,0">
                    <Button x:Name="button_Logout" Content="LOGOUT" HorizontalAlignment="Left" Margin="35,54,0,0" VerticalAlignment="Top" Width="193" Background="{x:Null}" Foreground="White" Cursor="Hand" Height="51" FontSize="20" FontFamily="Gotham Bold" BorderThickness="3" UseLayoutRounding="True" IsTabStop="True" Style="{DynamicResource Example}" Grid.RowSpan="2" Click="button_Logout_Click">
                        <Button.Resources>
                            <Style x:Key="FocusVisual">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                            <Style x:Key="Example" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="button_Configuration" Content="CONFIGURATION" HorizontalAlignment="Left" Margin="35,145,0,0" VerticalAlignment="Top" Width="193" Background="{x:Null}" Foreground="White" Cursor="Hand" Height="51" FontSize="20" FontFamily="Gotham Bold" BorderThickness="3" UseLayoutRounding="True" IsTabStop="True" Style="{DynamicResource Example}" Grid.Row="1" Click="button_Configuration_Click">
                        <Button.Resources>
                            <Style x:Key="FocusVisual">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                            <Style x:Key="Example" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="button_Back" Content="" HorizontalAlignment="Left" Margin="110,235,0,0" VerticalAlignment="Top" Width="25" Cursor="Hand" Height="34" FontSize="20" FontFamily="Gotham Bold" BorderThickness="3" UseLayoutRounding="True" IsTabStop="True" Style="{DynamicResource Example}" BorderBrush="{x:Null}" Grid.Row="1" Click="button_Back_Click">
                        <Button.Resources>
                            <Style x:Key="FocusVisual">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF1CC357"/>
                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                            <Style x:Key="Example" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                        <Button.Foreground>
                            <ImageBrush ImageSource="Resources/Button_Back.png"/>
                        </Button.Foreground>
                        <Button.Background>
                            <ImageBrush ImageSource="Resources/Button_Back.png"/>
                        </Button.Background>
                    </Button>
                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid Background="#FF181818">
        <Grid.RowDefinitions>
            <RowDefinition Height="17*"/>
            <RowDefinition Height="181*"/>
        </Grid.RowDefinitions>
        <Frame Grid.Row="1" Margin="270,0,0,105" x:Name="centralFrame" >

        </Frame>
        <Rectangle Fill="Black" HorizontalAlignment="Left" Height="639" VerticalAlignment="Top" Width="263" Grid.RowSpan="2"/>
        <TextBlock x:Name="textBlock_NameUser" HorizontalAlignment="Left" Margin="270,18,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Width="508" FontSize="25" RenderTransformOrigin="0.5,0.5" Height="27" FontFamily="Gotham Bold">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.496"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Button x:Name="button_Settings" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="33" Cursor="Hand" Height="21" FontSize="20" FontFamily="Gotham Bold" BorderThickness="3" UseLayoutRounding="True" IsTabStop="True" Style="{DynamicResource Example}" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="button_Settings_Click">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1CC357"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF1CC357"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Example" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.Background>
                <ImageBrush ImageSource="Resources/Button_Settings.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <TextBlock HorizontalAlignment="Left" Margin="10,138,0,0" TextWrapping="Wrap" Text="YOUR LIBRARY" VerticalAlignment="Top" Foreground="#FF707070" Width="209" FontSize="20" RenderTransformOrigin="0.5,0.5" Height="27" FontFamily="Gotham Bold" Grid.Row="1">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.496"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Button x:Name="button_Albums" Content="Albums" HorizontalAlignment="Left" Margin="10,179.4,0,0" VerticalAlignment="Top" Width="114" 
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}" Grid.Row="1"
                MouseDoubleClick="button_Albums_MouseDoubleClick"/>
        <Button x:Name="button_Tracks" Content="Tracks" HorizontalAlignment="Left" Margin="10,216.4,0,0" VerticalAlignment="Top" Width="114"
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}" Grid.Row="1"
                MouseDoubleClick="button_Tracks_MouseDoubleClick"/>
        <Button x:Name="button_Playlists" Content="Playlists" HorizontalAlignment="Left" Margin="10,257.4,0,0" VerticalAlignment="Top" Width="114" 
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}"  Grid.Row="1" 
                MouseDoubleClick="button_Playlists_MouseDoubleClick"/>
        <Button x:Name="button_ContentCreators" Content="Artistas" HorizontalAlignment="Left" Margin="10,296.4,0,0" VerticalAlignment="Top" Width="114"
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}" Grid.Row="1" Height="30" 
                MouseDoubleClick="button_ContentCreators_MouseDoubleClick"/>
        <Button x:Name="button_Search" Content="Search" HorizontalAlignment="Left" Margin="10,335.4,0,0" VerticalAlignment="Top" Width="114"
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}" Grid.Row="1"
                Height="30" MouseDoubleClick="button_Search_MouseDoubleClick"/>
        <Button x:Name="button_MyOwnTracks" Content="My Own Tracks" HorizontalAlignment="Left" Margin="10,374.4,0,0" VerticalAlignment="Top" Width="175"
                Background="{x:Null}" Foreground="White" FontSize="20" FontFamily="Gotham Medium" BorderBrush="{x:Null}" Grid.Row="1"
                Height="30" MouseDoubleClick="button_MyOwnTracks_MouseDoubleClick"/>
        <Image x:Name="image_Consumer" HorizontalAlignment="Left" Height="148" Margin="54,39,0,0" VerticalAlignment="Top" Width="148" Grid.RowSpan="2">
            <Image.Clip>
                <EllipseGeometry
                    RadiusX="74"
                    RadiusY="74"
                    Center="74,74"/>
            </Image.Clip>
        </Image>
        <Button x:Name="button_NewPlaylist" Content="+ NEW PLAYLIST" HorizontalAlignment="Left" Margin="0,433.4,0,0" VerticalAlignment="Top" Width="263" Click="button_NewPlaylist_Click" Background="{x:Null}" Foreground="White" Cursor="Hand" Height="77" FontSize="20" FontFamily="Gotham Bold" BorderThickness="3" UseLayoutRounding="True" IsTabStop="True" Style="{DynamicResource Example}" Grid.Row="1">
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF1CC357"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF1CC357"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="Green"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="Green"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="Example" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <Rectangle Fill="#FF282828" Height="102" Margin="0,510.4,-0.4,0" VerticalAlignment="Top" Grid.Row="1"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="949,538.4,0,30.4" Grid.Row="1" Width="135">
            <Button x:Name="Buttom_volume" Height="30" Width="30" Padding="0" Foreground="White" Background="{x:Null}" BorderBrush="{x:Null}">
                <materialDesign:PackIcon Kind="VolumeMedium" Width="30" Height="30" />
            </Button>
            <Slider x:Name="Slider_volume" Orientation="Horizontal" Maximum="100" Minimum="0" Value="50"
                            Width="100" Foreground="White"
                            VerticalAlignment="Center" ValueChanged="Slider_volume_ValueChanged"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="316,0,238.6,0.4" Height="100" Width="539" Grid.Row="1">
            <TextBlock x:Name="TextBlock_initial_duration" Text="0:00" Foreground="{DynamicResource TextColor}" Margin="0,62,0,0" FontFamily="Gotham Medium"/>
            <Slider x:Name="Slider_track_duration" Orientation="Horizontal" Maximum="100" Minimum="0" Value="0"
                            Width="446" Foreground="White"
                            VerticalAlignment="Center" Margin="10,62,10,10" ValueChanged="Slider_track_duration_ValueChanged" Height="28"/>
            <TextBlock  x:Name="TextBlock_final_duration" Text="00:00" Foreground="{DynamicResource TextColor}" Margin="0,62,0,0" FontFamily="Gotham Medium"/>
        </StackPanel>
        <Button x:Name="Button_track_previous" Height="Auto" Padding="0" Foreground="{DynamicResource TextColor}" Click="Button_track_previous_Click" Margin="468,518.4,574.6,46.4" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}">
            <materialDesign:PackIcon Kind="SkipPrevious"  Height="44" Width="50" />
        </Button>
        <Button x:Name="Button_track_playPause" Height="Auto" Padding="0" Foreground="White" Click="Button_track_playPause_Click" Margin="556,518.4,488.6,47.4" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}">
            <materialDesign:PackIcon x:Name="icon_playPause_button" Kind="PlayArrow"  Height="44" Width="44" />
        </Button>
        <Button x:Name="Button_track_next" Height="Auto" Padding="0" Foreground="{DynamicResource TextColor}" Click="Button_track_next_Click" Margin="638,518.4,403.6,46.4" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}">
            <materialDesign:PackIcon  Kind="SkipNext"  Height="43" Width="45" />
        </Button>
        <Button x:Name="Buttom_view_queue" Height="Auto" Padding="0" Foreground="{DynamicResource TextColor}"
                            Background="Transparent" Click="Buttom_view_queue_Click" Margin="891,542.4,164.6,36.4" Grid.Row="1" RenderTransformOrigin="0.5,0.5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <materialDesign:PackIcon Kind="ReorderHorizontal" Width="30" Height="30" />
        </Button>
        <Image x:Name="image_TrackStreaming" HorizontalAlignment="Left" Height="82" Margin="10,520.4,0,0" VerticalAlignment="Top" Width="83" Grid.Row="1">
            <Image.Clip>
                <EllipseGeometry
                    RadiusX="74"
                    RadiusY="74"
                    Center="74,74"/>
            </Image.Clip>
        </Image>
        <TextBlock x:Name="textBlock_TrackName" HorizontalAlignment="Left" Margin="102,528.4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Width="199" FontSize="15" RenderTransformOrigin="0.5,0.5" Height="27" FontFamily="Gotham Bold" Grid.Row="1">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.496"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform></TextBlock>
        <TextBlock x:Name="textBlock_ContentCreatorName" HorizontalAlignment="Left" Margin="102,560.4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" Width="199" FontSize="15" RenderTransformOrigin="0.5,0.5" Height="27" FontFamily="Gotham" Grid.Row="1">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.496"/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform></TextBlock>
    </Grid>
</Controls:MetroWindow>

