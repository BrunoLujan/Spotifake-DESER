#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from SpotifakeService import SpotifakeService
from SpotifakeService.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  Consumer GetConsumerById(Id idConsumer)')
    print('  ContentCreator GetContentCreatorById(Id idContentCreator)')
    print('  Consumer AddConsumer(Consumer newConsumer)')
    print('  ContentCreator AddConContentCreator(ContentCreator newContentCreator)')
    print('  Id DeleteConsumer(string email)')
    print('  Id DeleteContentCreator(string email)')
    print('  Consumer UpdateConsumerName(string email, string currentPassword, string newName, string newLastName)')
    print('  Consumer UpdateConsumerPassword(string email, string currentPassword, string newPassword)')
    print('  Consumer UpdateConsumerImage(string email, string newImageStoragePath)')
    print('  ContentCreator UpdateContentCreatorName(string email, string currentPassword, string newName, string newLastName)')
    print('  ContentCreator UpdateContentCreatorPassword(string email, string currentPassword, string newPassword)')
    print('  ContentCreator UpdateContentCreatorImage(string email, string newImageStoragePath)')
    print('  ContentCreator UpdateContentCreatorStageName(string email, string currentPassword, string newStageName)')
    print('  ContentCreator UpdateContentCreatorDescription(string email, string currentPassword, string newDescription)')
    print('  bool isConsumer(string email)')
    print('  Consumer LoginConsumer(string email, string password)')
    print('  ContentCreator LoginContentCreator(string email, string password)')
    print('  Album GetAlbumByTitle(string title)')
    print('  Track GetTrackByTitle(string title)')
    print('  Playlist GetPlaylistByTitle(string title)')
    print('  Album AddAlbum(Album newAlbum)')
    print('  Id DeleteAlbum(Id idAlbum)')
    print('  Album UpdateAlbumTitle(Id idAlbum, string newAlbumTitle)')
    print('  Album UpdateAlbumCover(Id idAlbum, string newImageStoragePath)')
    print('  Album UpdateAlbumFeaturing(Id idAlbum, Interpreter newFeaturing)')
    print('  Track AddTrackToAlbum(Id idAlbum, Track newTrack)')
    print('  Id DeleteAlbumTrack(Id idAlbum, Int trackNumber)')
    print('  Track UpdateAlbumTrackTitle(Id idAlbum, Int trackNumber, string newAlbumTrackTitle)')
    print('  Track UpdateAlbumTrackFeaturing(Id idAlbum, Int trackNumber, Interpreter newFeaturing)')
    print('  Track AddTrackToLibrary(Id idLibrary, Track newTrack)')
    print('  Id DeleteLibraryTrack(Id idLibrary, Int trackNumber)')
    print('  Album AddAlbumToLibrary(Id idLibrary, Album newAlbum)')
    print('  Id DeleteLibraryAlbum(Id idLibrary, Id idAlbum)')
    print('  Playlist AddPlaylistToLibrary(Id idLibrary, Playlist newPlaylist)')
    print('  Id DeleteLibraryPlaylist(Id idLibrary, Id idPlaylist)')
    print('  ContentCreator AddContentCreatorToLibrary(Id idLibrary, ContentCreator newContentCreator)')
    print('  Id DeleteLibraryContentCreator(Id idLibrary, Id idContentCreator)')
    print('  RelatedResult getContent(string query)')
    print('  Playlist UpdatePlaylistTitle(Id idPlaylist, string newPlaylistTitle)')
    print('  Album UpdatePlaylistCover(Id idPlaylist, string newImageStoragePath)')
    print('  Playlist UpdatePlaylistDescription(Id idPlaylist, string newDescription)')
    print('  Track AddTrackToPlaylist(Id idPlaylist, Track newtrack)')
    print('  Id DeletePlaylistTrack(Id idPlaylist, Int trackNumber)')
    print('  Track AddTrackToPlayQueue(Id idPlayQueu, Track newTrack)')
    print('  Id DeletePlayQueueTrack(Id idPlayQueu, Int trackNumber)')
    print('   GenerateRadioStation(MusicGender gender)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = SpotifakeService.Client(protocol)
transport.open()

if cmd == 'GetConsumerById':
    if len(args) != 1:
        print('GetConsumerById requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetConsumerById(eval(args[0]),))

elif cmd == 'GetContentCreatorById':
    if len(args) != 1:
        print('GetContentCreatorById requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorById(eval(args[0]),))

elif cmd == 'AddConsumer':
    if len(args) != 1:
        print('AddConsumer requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddConsumer(eval(args[0]),))

elif cmd == 'AddConContentCreator':
    if len(args) != 1:
        print('AddConContentCreator requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddConContentCreator(eval(args[0]),))

elif cmd == 'DeleteConsumer':
    if len(args) != 1:
        print('DeleteConsumer requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteConsumer(args[0],))

elif cmd == 'DeleteContentCreator':
    if len(args) != 1:
        print('DeleteContentCreator requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteContentCreator(args[0],))

elif cmd == 'UpdateConsumerName':
    if len(args) != 4:
        print('UpdateConsumerName requires 4 args')
        sys.exit(1)
    pp.pprint(client.UpdateConsumerName(args[0], args[1], args[2], args[3],))

elif cmd == 'UpdateConsumerPassword':
    if len(args) != 3:
        print('UpdateConsumerPassword requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateConsumerPassword(args[0], args[1], args[2],))

elif cmd == 'UpdateConsumerImage':
    if len(args) != 2:
        print('UpdateConsumerImage requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateConsumerImage(args[0], args[1],))

elif cmd == 'UpdateContentCreatorName':
    if len(args) != 4:
        print('UpdateContentCreatorName requires 4 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorName(args[0], args[1], args[2], args[3],))

elif cmd == 'UpdateContentCreatorPassword':
    if len(args) != 3:
        print('UpdateContentCreatorPassword requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorPassword(args[0], args[1], args[2],))

elif cmd == 'UpdateContentCreatorImage':
    if len(args) != 2:
        print('UpdateContentCreatorImage requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorImage(args[0], args[1],))

elif cmd == 'UpdateContentCreatorStageName':
    if len(args) != 3:
        print('UpdateContentCreatorStageName requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorStageName(args[0], args[1], args[2],))

elif cmd == 'UpdateContentCreatorDescription':
    if len(args) != 3:
        print('UpdateContentCreatorDescription requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorDescription(args[0], args[1], args[2],))

elif cmd == 'isConsumer':
    if len(args) != 1:
        print('isConsumer requires 1 args')
        sys.exit(1)
    pp.pprint(client.isConsumer(args[0],))

elif cmd == 'LoginConsumer':
    if len(args) != 2:
        print('LoginConsumer requires 2 args')
        sys.exit(1)
    pp.pprint(client.LoginConsumer(args[0], args[1],))

elif cmd == 'LoginContentCreator':
    if len(args) != 2:
        print('LoginContentCreator requires 2 args')
        sys.exit(1)
    pp.pprint(client.LoginContentCreator(args[0], args[1],))

elif cmd == 'GetAlbumByTitle':
    if len(args) != 1:
        print('GetAlbumByTitle requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetAlbumByTitle(args[0],))

elif cmd == 'GetTrackByTitle':
    if len(args) != 1:
        print('GetTrackByTitle requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetTrackByTitle(args[0],))

elif cmd == 'GetPlaylistByTitle':
    if len(args) != 1:
        print('GetPlaylistByTitle requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetPlaylistByTitle(args[0],))

elif cmd == 'AddAlbum':
    if len(args) != 1:
        print('AddAlbum requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddAlbum(eval(args[0]),))

elif cmd == 'DeleteAlbum':
    if len(args) != 1:
        print('DeleteAlbum requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteAlbum(eval(args[0]),))

elif cmd == 'UpdateAlbumTitle':
    if len(args) != 2:
        print('UpdateAlbumTitle requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateAlbumTitle(eval(args[0]), args[1],))

elif cmd == 'UpdateAlbumCover':
    if len(args) != 2:
        print('UpdateAlbumCover requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateAlbumCover(eval(args[0]), args[1],))

elif cmd == 'UpdateAlbumFeaturing':
    if len(args) != 2:
        print('UpdateAlbumFeaturing requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateAlbumFeaturing(eval(args[0]), eval(args[1]),))

elif cmd == 'AddTrackToAlbum':
    if len(args) != 2:
        print('AddTrackToAlbum requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddTrackToAlbum(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteAlbumTrack':
    if len(args) != 2:
        print('DeleteAlbumTrack requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteAlbumTrack(eval(args[0]), eval(args[1]),))

elif cmd == 'UpdateAlbumTrackTitle':
    if len(args) != 3:
        print('UpdateAlbumTrackTitle requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateAlbumTrackTitle(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'UpdateAlbumTrackFeaturing':
    if len(args) != 3:
        print('UpdateAlbumTrackFeaturing requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateAlbumTrackFeaturing(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'AddTrackToLibrary':
    if len(args) != 2:
        print('AddTrackToLibrary requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddTrackToLibrary(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteLibraryTrack':
    if len(args) != 2:
        print('DeleteLibraryTrack requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteLibraryTrack(eval(args[0]), eval(args[1]),))

elif cmd == 'AddAlbumToLibrary':
    if len(args) != 2:
        print('AddAlbumToLibrary requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddAlbumToLibrary(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteLibraryAlbum':
    if len(args) != 2:
        print('DeleteLibraryAlbum requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteLibraryAlbum(eval(args[0]), eval(args[1]),))

elif cmd == 'AddPlaylistToLibrary':
    if len(args) != 2:
        print('AddPlaylistToLibrary requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddPlaylistToLibrary(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteLibraryPlaylist':
    if len(args) != 2:
        print('DeleteLibraryPlaylist requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteLibraryPlaylist(eval(args[0]), eval(args[1]),))

elif cmd == 'AddContentCreatorToLibrary':
    if len(args) != 2:
        print('AddContentCreatorToLibrary requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddContentCreatorToLibrary(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteLibraryContentCreator':
    if len(args) != 2:
        print('DeleteLibraryContentCreator requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteLibraryContentCreator(eval(args[0]), eval(args[1]),))

elif cmd == 'getContent':
    if len(args) != 1:
        print('getContent requires 1 args')
        sys.exit(1)
    pp.pprint(client.getContent(args[0],))

elif cmd == 'UpdatePlaylistTitle':
    if len(args) != 2:
        print('UpdatePlaylistTitle requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdatePlaylistTitle(eval(args[0]), args[1],))

elif cmd == 'UpdatePlaylistCover':
    if len(args) != 2:
        print('UpdatePlaylistCover requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdatePlaylistCover(eval(args[0]), args[1],))

elif cmd == 'UpdatePlaylistDescription':
    if len(args) != 2:
        print('UpdatePlaylistDescription requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdatePlaylistDescription(eval(args[0]), args[1],))

elif cmd == 'AddTrackToPlaylist':
    if len(args) != 2:
        print('AddTrackToPlaylist requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddTrackToPlaylist(eval(args[0]), eval(args[1]),))

elif cmd == 'DeletePlaylistTrack':
    if len(args) != 2:
        print('DeletePlaylistTrack requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeletePlaylistTrack(eval(args[0]), eval(args[1]),))

elif cmd == 'AddTrackToPlayQueue':
    if len(args) != 2:
        print('AddTrackToPlayQueue requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddTrackToPlayQueue(eval(args[0]), eval(args[1]),))

elif cmd == 'DeletePlayQueueTrack':
    if len(args) != 2:
        print('DeletePlayQueueTrack requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeletePlayQueueTrack(eval(args[0]), eval(args[1]),))

elif cmd == 'GenerateRadioStation':
    if len(args) != 1:
        print('GenerateRadioStation requires 1 args')
        sys.exit(1)
    pp.pprint(client.GenerateRadioStation(eval(args[0]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
