#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from SpotifakeServices import ContentCreatorService
from SpotifakeServices.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('   GetContentCreators()')
    print('  ContentCreator GetContentCreatorById(Id idContentCreator)')
    print('   GetContentCreatorByLibraryId(Id idLibrary)')
    print('  bool GetContentCreatorByEmail(string email)')
    print('  bool GetContentCreatorByStageName(string email)')
    print('  ContentCreator AddContentCreator(ContentCreator newContentCreator)')
    print('  Id DeleteContentCreator(string email)')
    print('  ContentCreator UpdateContentCreatorName(string email, string currentPassword, string newName, string newLastName)')
    print('  ContentCreator UpdateContentCreatorPassword(string email, string currentPassword, string newPassword)')
    print('  ContentCreator UpdateContentCreatorImage(string email, string newImageStoragePath)')
    print('  ContentCreator UpdateContentCreatorStageName(string email, string currentPassword, string newStageName)')
    print('  ContentCreator UpdateContentCreatorDescription(string email, string currentPassword, string newDescription)')
    print('  ContentCreator LoginContentCreator(string email, string password)')
    print('  ContentCreator AddContentCreatorToLibrary(Id idLibrary, ContentCreator newContentCreator)')
    print('  Id DeleteLibraryContentCreator(Id idLibrary, Id idContentCreator)')
    print('   GetContentCreatorByQuery(string query)')
    print('  bool AddImageToMedia(string fileName, string image)')
    print('  string GetImageToMedia(string fileName)')
    print('  bool DeleteImageToMedia(string fileName)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ContentCreatorService.Client(protocol)
transport.open()

if cmd == 'GetContentCreators':
    if len(args) != 0:
        print('GetContentCreators requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreators())

elif cmd == 'GetContentCreatorById':
    if len(args) != 1:
        print('GetContentCreatorById requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorById(eval(args[0]),))

elif cmd == 'GetContentCreatorByLibraryId':
    if len(args) != 1:
        print('GetContentCreatorByLibraryId requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorByLibraryId(eval(args[0]),))

elif cmd == 'GetContentCreatorByEmail':
    if len(args) != 1:
        print('GetContentCreatorByEmail requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorByEmail(args[0],))

elif cmd == 'GetContentCreatorByStageName':
    if len(args) != 1:
        print('GetContentCreatorByStageName requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorByStageName(args[0],))

elif cmd == 'AddContentCreator':
    if len(args) != 1:
        print('AddContentCreator requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddContentCreator(eval(args[0]),))

elif cmd == 'DeleteContentCreator':
    if len(args) != 1:
        print('DeleteContentCreator requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteContentCreator(args[0],))

elif cmd == 'UpdateContentCreatorName':
    if len(args) != 4:
        print('UpdateContentCreatorName requires 4 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorName(args[0], args[1], args[2], args[3],))

elif cmd == 'UpdateContentCreatorPassword':
    if len(args) != 3:
        print('UpdateContentCreatorPassword requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorPassword(args[0], args[1], args[2],))

elif cmd == 'UpdateContentCreatorImage':
    if len(args) != 2:
        print('UpdateContentCreatorImage requires 2 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorImage(args[0], args[1],))

elif cmd == 'UpdateContentCreatorStageName':
    if len(args) != 3:
        print('UpdateContentCreatorStageName requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorStageName(args[0], args[1], args[2],))

elif cmd == 'UpdateContentCreatorDescription':
    if len(args) != 3:
        print('UpdateContentCreatorDescription requires 3 args')
        sys.exit(1)
    pp.pprint(client.UpdateContentCreatorDescription(args[0], args[1], args[2],))

elif cmd == 'LoginContentCreator':
    if len(args) != 2:
        print('LoginContentCreator requires 2 args')
        sys.exit(1)
    pp.pprint(client.LoginContentCreator(args[0], args[1],))

elif cmd == 'AddContentCreatorToLibrary':
    if len(args) != 2:
        print('AddContentCreatorToLibrary requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddContentCreatorToLibrary(eval(args[0]), eval(args[1]),))

elif cmd == 'DeleteLibraryContentCreator':
    if len(args) != 2:
        print('DeleteLibraryContentCreator requires 2 args')
        sys.exit(1)
    pp.pprint(client.DeleteLibraryContentCreator(eval(args[0]), eval(args[1]),))

elif cmd == 'GetContentCreatorByQuery':
    if len(args) != 1:
        print('GetContentCreatorByQuery requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetContentCreatorByQuery(args[0],))

elif cmd == 'AddImageToMedia':
    if len(args) != 2:
        print('AddImageToMedia requires 2 args')
        sys.exit(1)
    pp.pprint(client.AddImageToMedia(args[0], args[1],))

elif cmd == 'GetImageToMedia':
    if len(args) != 1:
        print('GetImageToMedia requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetImageToMedia(args[0],))

elif cmd == 'DeleteImageToMedia':
    if len(args) != 1:
        print('DeleteImageToMedia requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteImageToMedia(args[0],))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
